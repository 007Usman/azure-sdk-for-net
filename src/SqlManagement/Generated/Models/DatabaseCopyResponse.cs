// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using Microsoft.WindowsAzure.Management.Sql;

namespace Microsoft.WindowsAzure.Management.Sql.Models
{
    /// <summary>
    /// A standard service response including an HTTP status code and request
    /// ID.
    /// </summary>
    public partial class DatabaseCopyResponse : OperationResponse
    {
        private string _destinationDatabaseName;
        
        /// <summary>
        /// The name of the destination database.
        /// </summary>
        public string DestinationDatabaseName
        {
            get { return this._destinationDatabaseName; }
            set { this._destinationDatabaseName = value; }
        }
        
        private string _destinationServerName;
        
        /// <summary>
        /// The name of the destination server.
        /// </summary>
        public string DestinationServerName
        {
            get { return this._destinationServerName; }
            set { this._destinationServerName = value; }
        }
        
        private bool _isContinuous;
        
        /// <summary>
        /// Whether the copy is continous.
        /// </summary>
        public bool IsContinuous
        {
            get { return this._isContinuous; }
            set { this._isContinuous = value; }
        }
        
        private bool? _isForcedTerminate;
        
        /// <summary>
        /// Whether database copy termination will be forced.
        /// </summary>
        public bool? IsForcedTerminate
        {
            get { return this._isForcedTerminate; }
            set { this._isForcedTerminate = value; }
        }
        
        private bool _isInterlinkConnected;
        
        /// <summary>
        /// Whether the database copy is interlink connected.
        /// </summary>
        public bool IsInterlinkConnected
        {
            get { return this._isInterlinkConnected; }
            set { this._isInterlinkConnected = value; }
        }
        
        private bool _isLocalDatabaseReplicationTarget;
        
        /// <summary>
        /// Whether the local database is a replication target.
        /// </summary>
        public bool IsLocalDatabaseReplicationTarget
        {
            get { return this._isLocalDatabaseReplicationTarget; }
            set { this._isLocalDatabaseReplicationTarget = value; }
        }
        
        private int _localDatabaseId;
        
        /// <summary>
        /// The ID of the local database.
        /// </summary>
        public int LocalDatabaseId
        {
            get { return this._localDatabaseId; }
            set { this._localDatabaseId = value; }
        }
        
        private int? _maxLagInMinutes;
        
        /// <summary>
        /// The RPO for the copy.
        /// </summary>
        public int? MaxLagInMinutes
        {
            get { return this._maxLagInMinutes; }
            set { this._maxLagInMinutes = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// A unique identifier for the database copy.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private float? _percentComplete;
        
        /// <summary>
        /// Progress towards copy completion.
        /// </summary>
        public float? PercentComplete
        {
            get { return this._percentComplete; }
            set { this._percentComplete = value; }
        }
        
        private byte _replicationState;
        
        /// <summary>
        /// A value indicating the replication state for the database.
        /// </summary>
        public byte ReplicationState
        {
            get { return this._replicationState; }
            set { this._replicationState = value; }
        }
        
        private string _replicationStateDescription;
        
        /// <summary>
        /// A description of the replication state for the database.
        /// </summary>
        public string ReplicationStateDescription
        {
            get { return this._replicationStateDescription; }
            set { this._replicationStateDescription = value; }
        }
        
        private string _sourceDatabaseName;
        
        /// <summary>
        /// The name of the source database.
        /// </summary>
        public string SourceDatabaseName
        {
            get { return this._sourceDatabaseName; }
            set { this._sourceDatabaseName = value; }
        }
        
        private string _sourceServerName;
        
        /// <summary>
        /// The name of the source server.
        /// </summary>
        public string SourceServerName
        {
            get { return this._sourceServerName; }
            set { this._sourceServerName = value; }
        }
        
        private string _state;
        
        /// <summary>
        /// The state of the database copy.
        /// </summary>
        public string State
        {
            get { return this._state; }
            set { this._state = value; }
        }
        
        private string _textModifyDate;
        
        /// <summary>
        /// The UTC date when the database copy became transactionally
        /// consistent.
        /// </summary>
        public string TextModifyDate
        {
            get { return this._textModifyDate; }
            set { this._textModifyDate = value; }
        }
        
        private string _textStartDate;
        
        /// <summary>
        /// The UTC date when the database copy was initiated.
        /// </summary>
        public string TextStartDate
        {
            get { return this._textStartDate; }
            set { this._textStartDate = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the DatabaseCopyResponse class.
        /// </summary>
        public DatabaseCopyResponse()
        {
        }
    }
}
