// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.WindowsAzure.Management.Sql;
using Microsoft.WindowsAzure.Management.Sql.Models;

namespace Microsoft.WindowsAzure.Management.Sql
{
    /// <summary>
    /// The SQL Database Management API includes operations for managing SQL
    /// Database Copies for a subscription.
    /// </summary>
    public static partial class DatabaseCopyOperationsExtensions
    {
        /// <summary>
        /// The Create Database Copy operation starts a database copy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IDatabaseCopyOperations.
        /// </param>
        /// <param name='serverName'>
        /// The name of the SQL Server where the source database resides
        /// </param>
        /// <param name='databaseName'>
        /// The name of the source database
        /// </param>
        /// <param name='parameters'>
        /// Additional parameters for the create database copy operation
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static DatabaseCopyResponse Create(this IDatabaseCopyOperations operations, string serverName, string databaseName, DatabaseCopyCreateParameters parameters)
        {
            try
            {
                return operations.CreateAsync(serverName, databaseName, parameters).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Create Database Copy operation starts a database copy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IDatabaseCopyOperations.
        /// </param>
        /// <param name='serverName'>
        /// The name of the SQL Server where the source database resides
        /// </param>
        /// <param name='databaseName'>
        /// The name of the source database
        /// </param>
        /// <param name='parameters'>
        /// Additional parameters for the create database copy operation
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<DatabaseCopyResponse> CreateAsync(this IDatabaseCopyOperations operations, string serverName, string databaseName, DatabaseCopyCreateParameters parameters)
        {
            return operations.CreateAsync(serverName, databaseName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// The Delete Database Copy operation stops a SQL Database copy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IDatabaseCopyOperations.
        /// </param>
        /// <param name='serverName'>
        /// The name of the source or destination SQL Server instance
        /// </param>
        /// <param name='databaseName'>
        /// The name of the database
        /// </param>
        /// <param name='databaseCopyName'>
        /// The unique identifier for the database copy to stop
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static OperationResponse Delete(this IDatabaseCopyOperations operations, string serverName, string databaseName, Guid databaseCopyName)
        {
            try
            {
                return operations.DeleteAsync(serverName, databaseName, databaseCopyName).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Delete Database Copy operation stops a SQL Database copy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IDatabaseCopyOperations.
        /// </param>
        /// <param name='serverName'>
        /// The name of the source or destination SQL Server instance
        /// </param>
        /// <param name='databaseName'>
        /// The name of the database
        /// </param>
        /// <param name='databaseCopyName'>
        /// The unique identifier for the database copy to stop
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<OperationResponse> DeleteAsync(this IDatabaseCopyOperations operations, string serverName, string databaseName, Guid databaseCopyName)
        {
            return operations.DeleteAsync(serverName, databaseName, databaseCopyName, CancellationToken.None);
        }
        
        /// <summary>
        /// The Get Database Copy operation retrieves information about a SQL
        /// Server database copy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IDatabaseCopyOperations.
        /// </param>
        /// <param name='serverName'>
        /// The name of the source or destination SQL Server instance
        /// </param>
        /// <param name='databaseName'>
        /// The name of the database
        /// </param>
        /// <param name='databaseCopyName'>
        /// The unique identifier for the database copy to retrieve
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static DatabaseCopyResponse Get(this IDatabaseCopyOperations operations, string serverName, string databaseName, string databaseCopyName)
        {
            try
            {
                return operations.GetAsync(serverName, databaseName, databaseCopyName).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Get Database Copy operation retrieves information about a SQL
        /// Server database copy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IDatabaseCopyOperations.
        /// </param>
        /// <param name='serverName'>
        /// The name of the source or destination SQL Server instance
        /// </param>
        /// <param name='databaseName'>
        /// The name of the database
        /// </param>
        /// <param name='databaseCopyName'>
        /// The unique identifier for the database copy to retrieve
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<DatabaseCopyResponse> GetAsync(this IDatabaseCopyOperations operations, string serverName, string databaseName, string databaseCopyName)
        {
            return operations.GetAsync(serverName, databaseName, databaseCopyName, CancellationToken.None);
        }
        
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IDatabaseCopyOperations.
        /// </param>
        /// <param name='serverName'>
        /// The name of the database server to be queried
        /// </param>
        /// <param name='databaseName'>
        /// The name of the database to be queried
        /// </param>
        /// <returns>
        /// Response containing the list of database copies for a given
        /// database.
        /// </returns>
        public static DatabaseCopyListResponse List(this IDatabaseCopyOperations operations, string serverName, string databaseName)
        {
            try
            {
                return operations.ListAsync(serverName, databaseName).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IDatabaseCopyOperations.
        /// </param>
        /// <param name='serverName'>
        /// The name of the database server to be queried
        /// </param>
        /// <param name='databaseName'>
        /// The name of the database to be queried
        /// </param>
        /// <returns>
        /// Response containing the list of database copies for a given
        /// database.
        /// </returns>
        public static Task<DatabaseCopyListResponse> ListAsync(this IDatabaseCopyOperations operations, string serverName, string databaseName)
        {
            return operations.ListAsync(serverName, databaseName, CancellationToken.None);
        }
        
        /// <summary>
        /// The Update Database Copy operation updates a SQL Server database
        /// copy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IDatabaseCopyOperations.
        /// </param>
        /// <param name='serverName'>
        /// The name of the source or destination SQL Server instance
        /// </param>
        /// <param name='databaseName'>
        /// The name of the database
        /// </param>
        /// <param name='databaseCopyName'>
        /// The unique identifier for the database copy to update
        /// </param>
        /// <param name='parameters'>
        /// Additional parameters for the update database copy operation
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static DatabaseCopyResponse Update(this IDatabaseCopyOperations operations, string serverName, string databaseName, Guid databaseCopyName, DatabaseCopyUpdateParameters parameters)
        {
            try
            {
                return operations.UpdateAsync(serverName, databaseName, databaseCopyName, parameters).Result;
            }
            catch (AggregateException ex)
            {
                if (ex.InnerExceptions.Count > 1)
                {
                    throw;
                }
                else
                {
                    throw ex.InnerException;
                }
            }
        }
        
        /// <summary>
        /// The Update Database Copy operation updates a SQL Server database
        /// copy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IDatabaseCopyOperations.
        /// </param>
        /// <param name='serverName'>
        /// The name of the source or destination SQL Server instance
        /// </param>
        /// <param name='databaseName'>
        /// The name of the database
        /// </param>
        /// <param name='databaseCopyName'>
        /// The unique identifier for the database copy to update
        /// </param>
        /// <param name='parameters'>
        /// Additional parameters for the update database copy operation
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<DatabaseCopyResponse> UpdateAsync(this IDatabaseCopyOperations operations, string serverName, string databaseName, Guid databaseCopyName, DatabaseCopyUpdateParameters parameters)
        {
            return operations.UpdateAsync(serverName, databaseName, databaseCopyName, parameters, CancellationToken.None);
        }
    }
}
