// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.15.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.DataLake.Analytics
{
    using System;
    using System.Collections.Generic;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
    using Microsoft.Rest.Azure.OData;
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// CatalogOperations operations.
    /// </summary>
    public partial interface ICatalogOperations
    {
        /// <summary>
        /// Creates the specified secret for use with external data sources in
        /// the specified database
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to create the secret in.
        /// </param>
        /// <param name='secretName'>
        /// The parameters required to create the secret (name and password)
        /// </param>
        /// <param name='parameters'>
        /// The parameters required to create the secret (name and password)
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<USqlSecret>> CreateSecretWithHttpMessagesAsync(string databaseName, string secretName, DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters parameters, string accountName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Modifies the specified secret for use with external data sources
        /// in the specified database
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to modify the secret in.
        /// </param>
        /// <param name='secretName'>
        /// The parameters required to modify the secret (name and password)
        /// </param>
        /// <param name='parameters'>
        /// The parameters required to modify the secret (name and password)
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<USqlSecret>> UpdateSecretWithHttpMessagesAsync(string databaseName, string secretName, DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters parameters, string accountName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the specified secret in the specified database
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to get the secret from.
        /// </param>
        /// <param name='secretName'>
        /// The name of the secret to get
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<USqlSecret>> GetSecretWithHttpMessagesAsync(string databaseName, string secretName, string accountName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes the specified secret in the specified database
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to delete the secret from.
        /// </param>
        /// <param name='secretName'>
        /// The name of the secret to delete
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> DeleteSecretWithHttpMessagesAsync(string databaseName, string secretName, string accountName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the specified external data source from the current Data
        /// Lake Analytics catalog
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to find the external Data Source in.
        /// </param>
        /// <param name='externalDataSourceName'>
        /// The name of the external Data Source to find.
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<USqlExternalDataSource>> GetExternalDataSourceWithHttpMessagesAsync(string databaseName, string externalDataSourceName, string accountName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of external data sources from the current Data
        /// Lake Analytics catalog
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to find the external Data Source in.
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='filter'>
        /// Gets or sets OData filter. Optional.
        /// </param>
        /// <param name='top'>
        /// Gets or sets the number of items to return. Optional.
        /// </param>
        /// <param name='skip'>
        /// Gets or sets the number of items to skip over before returning
        /// elements. Optional.
        /// </param>
        /// <param name='expand'>
        /// Gets or sets OData expansion. Expand related resources in line
        /// with the retrieved resources, e.g. Categories/$expand=Products
        /// would expand Product data in line with each Category entry.
        /// Optional.
        /// </param>
        /// <param name='select'>
        /// Gets or sets OData Select statement. Limits the properties on each
        /// entry to just those requested, e.g.
        /// Categories?$select=CategoryName,Description. Optional.
        /// </param>
        /// <param name='orderby'>
        /// Gets or sets the OrderBy clause. One or more comma-separated
        /// expressions with an optional "asc" (the default) or "desc"
        /// depending on the order youâ€™d like the values sorted, e.g.
        /// Categories?$orderby=CategoryName desc. Optional.
        /// </param>
        /// <param name='count'>
        /// Gets or sets a Boolean value of true or false to request a count
        /// of the matching resources included with the resources in the
        /// response, e.g. Categories?$count=true. Optional.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlExternalDataSource>>> ListExternalDataSourcesWithHttpMessagesAsync(string databaseName, string accountName, string filter = default(string), int? top = default(int?), int? skip = default(int?), string expand = default(string), string select = default(string), string orderby = default(string), bool? count = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the specified credential from the current Data Lake
        /// Analytics catalog
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to find the schema in.
        /// </param>
        /// <param name='credentialName'>
        /// The name of the credential to find.
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<USqlCredential>> GetCredentialWithHttpMessagesAsync(string databaseName, string credentialName, string accountName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of credentials from the current Data Lake
        /// Analytics catalog
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to find the schema in.
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='filter'>
        /// Gets or sets OData filter. Optional.
        /// </param>
        /// <param name='top'>
        /// Gets or sets the number of items to return. Optional.
        /// </param>
        /// <param name='skip'>
        /// Gets or sets the number of items to skip over before returning
        /// elements. Optional.
        /// </param>
        /// <param name='expand'>
        /// Gets or sets OData expansion. Expand related resources in line
        /// with the retrieved resources, e.g. Categories/$expand=Products
        /// would expand Product data in line with each Category entry.
        /// Optional.
        /// </param>
        /// <param name='select'>
        /// Gets or sets OData Select statement. Limits the properties on each
        /// entry to just those requested, e.g.
        /// Categories?$select=CategoryName,Description. Optional.
        /// </param>
        /// <param name='orderby'>
        /// Gets or sets the OrderBy clause. One or more comma-separated
        /// expressions with an optional "asc" (the default) or "desc"
        /// depending on the order youâ€™d like the values sorted, e.g.
        /// Categories?$orderby=CategoryName desc. Optional.
        /// </param>
        /// <param name='count'>
        /// Gets or sets a Boolean value of true or false to request a count
        /// of the matching resources included with the resources in the
        /// response, e.g. Categories?$count=true. Optional.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlCredential>>> ListCredentialsWithHttpMessagesAsync(string databaseName, string accountName, string filter = default(string), int? top = default(int?), int? skip = default(int?), string expand = default(string), string select = default(string), string orderby = default(string), bool? count = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the specified procedure from the current Data Lake
        /// Analytics catalog
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to find the procedure in.
        /// </param>
        /// <param name='schemaName'>
        /// The name of the schema to find the procedure in.
        /// </param>
        /// <param name='procedureName'>
        /// The name of the procedure to find.
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<USqlProcedure>> GetProcedureWithHttpMessagesAsync(string databaseName, string schemaName, string procedureName, string accountName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of procedures from the current Data Lake
        /// Analytics catalog
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to find the procedures in.
        /// </param>
        /// <param name='schemaName'>
        /// The name of the schema to find the procedures in.
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='filter'>
        /// Gets or sets OData filter. Optional.
        /// </param>
        /// <param name='top'>
        /// Gets or sets the number of items to return. Optional.
        /// </param>
        /// <param name='skip'>
        /// Gets or sets the number of items to skip over before returning
        /// elements. Optional.
        /// </param>
        /// <param name='expand'>
        /// Gets or sets OData expansion. Expand related resources in line
        /// with the retrieved resources, e.g. Categories/$expand=Products
        /// would expand Product data in line with each Category entry.
        /// Optional.
        /// </param>
        /// <param name='select'>
        /// Gets or sets OData Select statement. Limits the properties on each
        /// entry to just those requested, e.g.
        /// Categories?$select=CategoryName,Description. Optional.
        /// </param>
        /// <param name='orderby'>
        /// Gets or sets the OrderBy clause. One or more comma-separated
        /// expressions with an optional "asc" (the default) or "desc"
        /// depending on the order youâ€™d like the values sorted, e.g.
        /// Categories?$orderby=CategoryName desc. Optional.
        /// </param>
        /// <param name='count'>
        /// Gets or sets a Boolean value of true or false to request a count
        /// of the matching resources included with the resources in the
        /// response, e.g. Categories?$count=true. Optional.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlProcedure>>> ListProceduresWithHttpMessagesAsync(string databaseName, string schemaName, string accountName, string filter = default(string), int? top = default(int?), int? skip = default(int?), string expand = default(string), string select = default(string), string orderby = default(string), bool? count = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the specified table from the current Data Lake Analytics
        /// catalog
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to find the table in.
        /// </param>
        /// <param name='schemaName'>
        /// The name of the schema to find the table in.
        /// </param>
        /// <param name='tableName'>
        /// The name of the table to find.
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<USqlTable>> GetTableWithHttpMessagesAsync(string databaseName, string schemaName, string tableName, string accountName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of tables from the current Data Lake Analytics
        /// catalog
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to find the tables in.
        /// </param>
        /// <param name='schemaName'>
        /// The name of the schema to find the tables in.
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='filter'>
        /// Gets or sets OData filter. Optional.
        /// </param>
        /// <param name='top'>
        /// Gets or sets the number of items to return. Optional.
        /// </param>
        /// <param name='skip'>
        /// Gets or sets the number of items to skip over before returning
        /// elements. Optional.
        /// </param>
        /// <param name='expand'>
        /// Gets or sets OData expansion. Expand related resources in line
        /// with the retrieved resources, e.g. Categories/$expand=Products
        /// would expand Product data in line with each Category entry.
        /// Optional.
        /// </param>
        /// <param name='select'>
        /// Gets or sets OData Select statement. Limits the properties on each
        /// entry to just those requested, e.g.
        /// Categories?$select=CategoryName,Description. Optional.
        /// </param>
        /// <param name='orderby'>
        /// Gets or sets the OrderBy clause. One or more comma-separated
        /// expressions with an optional "asc" (the default) or "desc"
        /// depending on the order youâ€™d like the values sorted, e.g.
        /// Categories?$orderby=CategoryName desc. Optional.
        /// </param>
        /// <param name='count'>
        /// Gets or sets a Boolean value of true or false to request a count
        /// of the matching resources included with the resources in the
        /// response, e.g. Categories?$count=true. Optional.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlTable>>> ListTablesWithHttpMessagesAsync(string databaseName, string schemaName, string accountName, string filter = default(string), int? top = default(int?), int? skip = default(int?), string expand = default(string), string select = default(string), string orderby = default(string), bool? count = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the specified view from the current Data Lake Analytics
        /// catalog
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to find the view in.
        /// </param>
        /// <param name='schemaName'>
        /// The name of the schema to find the view in.
        /// </param>
        /// <param name='viewName'>
        /// The name of the view to find.
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<USqlView>> GetViewWithHttpMessagesAsync(string databaseName, string schemaName, string viewName, string accountName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of views from the current Data Lake Analytics
        /// catalog
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to find the views in.
        /// </param>
        /// <param name='schemaName'>
        /// The name of the schema to find the views in.
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='filter'>
        /// Gets or sets OData filter. Optional.
        /// </param>
        /// <param name='top'>
        /// Gets or sets the number of items to return. Optional.
        /// </param>
        /// <param name='skip'>
        /// Gets or sets the number of items to skip over before returning
        /// elements. Optional.
        /// </param>
        /// <param name='expand'>
        /// Gets or sets OData expansion. Expand related resources in line
        /// with the retrieved resources, e.g. Categories/$expand=Products
        /// would expand Product data in line with each Category entry.
        /// Optional.
        /// </param>
        /// <param name='select'>
        /// Gets or sets OData Select statement. Limits the properties on each
        /// entry to just those requested, e.g.
        /// Categories?$select=CategoryName,Description. Optional.
        /// </param>
        /// <param name='orderby'>
        /// Gets or sets the OrderBy clause. One or more comma-separated
        /// expressions with an optional "asc" (the default) or "desc"
        /// depending on the order youâ€™d like the values sorted, e.g.
        /// Categories?$orderby=CategoryName desc. Optional.
        /// </param>
        /// <param name='count'>
        /// Gets or sets a Boolean value of true or false to request a count
        /// of the matching resources included with the resources in the
        /// response, e.g. Categories?$count=true. Optional.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlView>>> ListViewsWithHttpMessagesAsync(string databaseName, string schemaName, string accountName, string filter = default(string), int? top = default(int?), int? skip = default(int?), string expand = default(string), string select = default(string), string orderby = default(string), bool? count = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the specified table from the current Data Lake Analytics
        /// catalog
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to find the statistics in.
        /// </param>
        /// <param name='schemaName'>
        /// The name of the schema to find the statistics in.
        /// </param>
        /// <param name='tableName'>
        /// The name of the table to find the statistics in.
        /// </param>
        /// <param name='statisticsName'>
        /// The name of the table statistics to find.
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<USqlTableStatistics>> GetTableStatisticWithHttpMessagesAsync(string databaseName, string schemaName, string tableName, string statisticsName, string accountName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of tables from the current Data Lake Analytics
        /// catalog
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to find the statistics in.
        /// </param>
        /// <param name='schemaName'>
        /// The name of the schema to find the statistics in.
        /// </param>
        /// <param name='tableName'>
        /// The name of the table to find the statistics in.
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='filter'>
        /// Gets or sets OData filter. Optional.
        /// </param>
        /// <param name='top'>
        /// Gets or sets the number of items to return. Optional.
        /// </param>
        /// <param name='skip'>
        /// Gets or sets the number of items to skip over before returning
        /// elements. Optional.
        /// </param>
        /// <param name='expand'>
        /// Gets or sets OData expansion. Expand related resources in line
        /// with the retrieved resources, e.g. Categories/$expand=Products
        /// would expand Product data in line with each Category entry.
        /// Optional.
        /// </param>
        /// <param name='select'>
        /// Gets or sets OData Select statement. Limits the properties on each
        /// entry to just those requested, e.g.
        /// Categories?$select=CategoryName,Description. Optional.
        /// </param>
        /// <param name='orderby'>
        /// Gets or sets the OrderBy clause. One or more comma-separated
        /// expressions with an optional "asc" (the default) or "desc"
        /// depending on the order youâ€™d like the values sorted, e.g.
        /// Categories?$orderby=CategoryName desc. Optional.
        /// </param>
        /// <param name='count'>
        /// Gets or sets a Boolean value of true or false to request a count
        /// of the matching resources included with the resources in the
        /// response, e.g. Categories?$count=true. Optional.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlTableStatistics>>> ListTableStatisticsWithHttpMessagesAsync(string databaseName, string schemaName, string tableName, string accountName, string filter = default(string), int? top = default(int?), int? skip = default(int?), string expand = default(string), string select = default(string), string orderby = default(string), bool? count = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of catalog types within the specified database
        /// and schema for the current Data Lake Analytics catalog
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to find the types in.
        /// </param>
        /// <param name='schemaName'>
        /// The name of the schema to find the types in.
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='odataQuery'>
        /// OData parameters to apply to the operation.
        /// </param>
        /// <param name='select'>
        /// Gets or sets OData Select statement. Limits the properties on each
        /// entry to just those requested, e.g.
        /// Categories?$select=CategoryName,Description. Optional.
        /// </param>
        /// <param name='count'>
        /// Gets or sets a Boolean value of true or false to request a count
        /// of the matching resources included with the resources in the
        /// response, e.g. Categories?$count=true. Optional.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlType>>> ListTypesWithHttpMessagesAsync(string databaseName, string schemaName, string accountName, ODataQuery<USqlType> odataQuery = default(ODataQuery<USqlType>), string select = default(string), bool? count = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the specified table valued function from the current
        /// Data Lake Analytics catalog
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to find the table valued function in.
        /// </param>
        /// <param name='schemaName'>
        /// The name of the schema to find the table valued function in.
        /// </param>
        /// <param name='tableValuedFunctionName'>
        /// The name of the tableValuedFunction to find.
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<USqlTableValuedFunction>> GetTableValuedFunctionWithHttpMessagesAsync(string databaseName, string schemaName, string tableValuedFunctionName, string accountName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of table valued functions from the current Data
        /// Lake Analytics catalog
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to find the table valued functions in.
        /// </param>
        /// <param name='schemaName'>
        /// The name of the schema to find the table valued functions in.
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='filter'>
        /// Gets or sets OData filter. Optional.
        /// </param>
        /// <param name='top'>
        /// Gets or sets the number of items to return. Optional.
        /// </param>
        /// <param name='skip'>
        /// Gets or sets the number of items to skip over before returning
        /// elements. Optional.
        /// </param>
        /// <param name='expand'>
        /// Gets or sets OData expansion. Expand related resources in line
        /// with the retrieved resources, e.g. Categories/$expand=Products
        /// would expand Product data in line with each Category entry.
        /// Optional.
        /// </param>
        /// <param name='select'>
        /// Gets or sets OData Select statement. Limits the properties on each
        /// entry to just those requested, e.g.
        /// Categories?$select=CategoryName,Description. Optional.
        /// </param>
        /// <param name='orderby'>
        /// Gets or sets the OrderBy clause. One or more comma-separated
        /// expressions with an optional "asc" (the default) or "desc"
        /// depending on the order youâ€™d like the values sorted, e.g.
        /// Categories?$orderby=CategoryName desc. Optional.
        /// </param>
        /// <param name='count'>
        /// Gets or sets a Boolean value of true or false to request a count
        /// of the matching resources included with the resources in the
        /// response, e.g. Categories?$count=true. Optional.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlTableValuedFunction>>> ListTableValuedFunctionsWithHttpMessagesAsync(string databaseName, string schemaName, string accountName, string filter = default(string), int? top = default(int?), int? skip = default(int?), string expand = default(string), string select = default(string), string orderby = default(string), bool? count = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the specified assembly from the current Data Lake
        /// Analytics catalog
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to find the assembly in.
        /// </param>
        /// <param name='assemblyName'>
        /// The name of the assembly to find.
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<USqlAssembly>> GetAssemblyWithHttpMessagesAsync(string databaseName, string assemblyName, string accountName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of assemblies from the current Data Lake
        /// Analytics catalog
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to find the assembly in.
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='filter'>
        /// Gets or sets OData filter. Optional.
        /// </param>
        /// <param name='top'>
        /// Gets or sets the number of items to return. Optional.
        /// </param>
        /// <param name='skip'>
        /// Gets or sets the number of items to skip over before returning
        /// elements. Optional.
        /// </param>
        /// <param name='expand'>
        /// Gets or sets OData expansion. Expand related resources in line
        /// with the retrieved resources, e.g. Categories/$expand=Products
        /// would expand Product data in line with each Category entry.
        /// Optional.
        /// </param>
        /// <param name='select'>
        /// Gets or sets OData Select statement. Limits the properties on each
        /// entry to just those requested, e.g.
        /// Categories?$select=CategoryName,Description. Optional.
        /// </param>
        /// <param name='orderby'>
        /// Gets or sets the OrderBy clause. One or more comma-separated
        /// expressions with an optional "asc" (the default) or "desc"
        /// depending on the order youâ€™d like the values sorted, e.g.
        /// Categories?$orderby=CategoryName desc. Optional.
        /// </param>
        /// <param name='count'>
        /// Gets or sets a Boolean value of true or false to request a count
        /// of the matching resources included with the resources in the
        /// response, e.g. Categories?$count=true. Optional.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlAssemblyClr>>> ListAssembliesWithHttpMessagesAsync(string databaseName, string accountName, string filter = default(string), int? top = default(int?), int? skip = default(int?), string expand = default(string), string select = default(string), string orderby = default(string), bool? count = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the specified schema from the current Data Lake
        /// Analytics catalog
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to find the schema in.
        /// </param>
        /// <param name='schemaName'>
        /// The name of the schema to find.
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<USqlSchema>> GetSchemaWithHttpMessagesAsync(string databaseName, string schemaName, string accountName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of schemas from the current Data Lake Analytics
        /// catalog
        /// </summary>
        /// <param name='databaseName'>
        /// The name of the database to find the schema in.
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='filter'>
        /// Gets or sets OData filter. Optional.
        /// </param>
        /// <param name='top'>
        /// Gets or sets the number of items to return. Optional.
        /// </param>
        /// <param name='skip'>
        /// Gets or sets the number of items to skip over before returning
        /// elements. Optional.
        /// </param>
        /// <param name='expand'>
        /// Gets or sets OData expansion. Expand related resources in line
        /// with the retrieved resources, e.g. Categories/$expand=Products
        /// would expand Product data in line with each Category entry.
        /// Optional.
        /// </param>
        /// <param name='select'>
        /// Gets or sets OData Select statement. Limits the properties on each
        /// entry to just those requested, e.g.
        /// Categories?$select=CategoryName,Description. Optional.
        /// </param>
        /// <param name='orderby'>
        /// Gets or sets the OrderBy clause. One or more comma-separated
        /// expressions with an optional "asc" (the default) or "desc"
        /// depending on the order youâ€™d like the values sorted, e.g.
        /// Categories?$orderby=CategoryName desc. Optional.
        /// </param>
        /// <param name='count'>
        /// Gets or sets a Boolean value of true or false to request a count
        /// of the matching resources included with the resources in the
        /// response, e.g. Categories?$count=true. Optional.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlSchema>>> ListSchemasWithHttpMessagesAsync(string databaseName, string accountName, string filter = default(string), int? top = default(int?), int? skip = default(int?), string expand = default(string), string select = default(string), string orderby = default(string), bool? count = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the specified database from the current Data Lake
        /// Analytics catalog
        /// </summary>
        /// <param name='databaseName'>
        /// The path to the file to create.
        /// </param>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<USqlDatabase>> GetDatabaseWithHttpMessagesAsync(string databaseName, string accountName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of databases from the current Data Lake
        /// Analytics catalog
        /// </summary>
        /// <param name='accountName'>
        /// The Azure Data Lake Analytics account to execute catalog
        /// operations on.
        /// </param>
        /// <param name='filter'>
        /// Gets or sets OData filter. Optional.
        /// </param>
        /// <param name='top'>
        /// Gets or sets the number of items to return. Optional.
        /// </param>
        /// <param name='skip'>
        /// Gets or sets the number of items to skip over before returning
        /// elements. Optional.
        /// </param>
        /// <param name='expand'>
        /// Gets or sets OData expansion. Expand related resources in line
        /// with the retrieved resources, e.g. Categories/$expand=Products
        /// would expand Product data in line with each Category entry.
        /// Optional.
        /// </param>
        /// <param name='select'>
        /// Gets or sets OData Select statement. Limits the properties on each
        /// entry to just those requested, e.g.
        /// Categories?$select=CategoryName,Description. Optional.
        /// </param>
        /// <param name='orderby'>
        /// Gets or sets the OrderBy clause. One or more comma-separated
        /// expressions with an optional "asc" (the default) or "desc"
        /// depending on the order youâ€™d like the values sorted, e.g.
        /// Categories?$orderby=CategoryName desc. Optional.
        /// </param>
        /// <param name='count'>
        /// Gets or sets a Boolean value of true or false to request a count
        /// of the matching resources included with the resources in the
        /// response, e.g. Categories?$count=true. Optional.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlDatabase>>> ListDatabasesWithHttpMessagesAsync(string accountName, string filter = default(string), int? top = default(int?), int? skip = default(int?), string expand = default(string), string select = default(string), string orderby = default(string), bool? count = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of external data sources from the current Data
        /// Lake Analytics catalog
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlExternalDataSource>>> ListExternalDataSourcesNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of credentials from the current Data Lake
        /// Analytics catalog
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlCredential>>> ListCredentialsNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of procedures from the current Data Lake
        /// Analytics catalog
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlProcedure>>> ListProceduresNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of tables from the current Data Lake Analytics
        /// catalog
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlTable>>> ListTablesNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of views from the current Data Lake Analytics
        /// catalog
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlView>>> ListViewsNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of tables from the current Data Lake Analytics
        /// catalog
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlTableStatistics>>> ListTableStatisticsNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of catalog types within the specified database
        /// and schema for the current Data Lake Analytics catalog
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlType>>> ListTypesNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of table valued functions from the current Data
        /// Lake Analytics catalog
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlTableValuedFunction>>> ListTableValuedFunctionsNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of assemblies from the current Data Lake
        /// Analytics catalog
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlAssemblyClr>>> ListAssembliesNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of schemas from the current Data Lake Analytics
        /// catalog
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlSchema>>> ListSchemasNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Retrieves the list of databases from the current Data Lake
        /// Analytics catalog
        /// </summary>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<USqlDatabase>>> ListDatabasesNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
