// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Hyak.Common;
using Microsoft.Azure.Management.Network.Models;

namespace Microsoft.Azure.Management.Network.Models
{
    /// <summary>
    /// ApplicationGateways resource
    /// </summary>
    public partial class ApplicationGateway : TopLevelResource
    {
        private IList<ApplicationGatewayBackendAddressPool> _backendAddressPools;
        
        /// <summary>
        /// Optional. Gets or sets backend address pool of application gateway
        /// resource
        /// </summary>
        public IList<ApplicationGatewayBackendAddressPool> BackendAddressPools
        {
            get { return this._backendAddressPools; }
            set { this._backendAddressPools = value; }
        }
        
        private IList<ApplicationGatewayBackendHttpSettings> _backendHttpSettingsList;
        
        /// <summary>
        /// Optional. Gets or sets backend http settings of application gateway
        /// resource
        /// </summary>
        public IList<ApplicationGatewayBackendHttpSettings> BackendHttpSettingsList
        {
            get { return this._backendHttpSettingsList; }
            set { this._backendHttpSettingsList = value; }
        }
        
        private string _fqdn;
        
        /// <summary>
        /// Optional. Gets fqdn of application gateway resource
        /// </summary>
        public string Fqdn
        {
            get { return this._fqdn; }
            set { this._fqdn = value; }
        }
        
        private IList<ApplicationGatewayFrontendIpConfiguration> _frontendIpConfigurations;
        
        /// <summary>
        /// Optional. Gets or sets frontend IP addresses of application gateway
        /// resource
        /// </summary>
        public IList<ApplicationGatewayFrontendIpConfiguration> FrontendIpConfigurations
        {
            get { return this._frontendIpConfigurations; }
            set { this._frontendIpConfigurations = value; }
        }
        
        private IList<ApplicationGatewayFrontendPort> _frontendPorts;
        
        /// <summary>
        /// Optional. Gets or sets frontend ports of application gateway
        /// resource
        /// </summary>
        public IList<ApplicationGatewayFrontendPort> FrontendPorts
        {
            get { return this._frontendPorts; }
            set { this._frontendPorts = value; }
        }
        
        private IList<ApplicationGatewayIpConfiguration> _gatewayIpConfigurations;
        
        /// <summary>
        /// Optional. Gets or sets subnets of application gateway resource
        /// </summary>
        public IList<ApplicationGatewayIpConfiguration> GatewayIpConfigurations
        {
            get { return this._gatewayIpConfigurations; }
            set { this._gatewayIpConfigurations = value; }
        }
        
        private IList<ApplicationGatewayHttpListener> _httpListeners;
        
        /// <summary>
        /// Optional. Gets or sets HTTP listeners of application gateway
        /// resource
        /// </summary>
        public IList<ApplicationGatewayHttpListener> HttpListeners
        {
            get { return this._httpListeners; }
            set { this._httpListeners = value; }
        }
        
        private int _instanceCount;
        
        /// <summary>
        /// Optional. Gets or sets instance count of application gateway
        /// resource
        /// </summary>
        public int InstanceCount
        {
            get { return this._instanceCount; }
            set { this._instanceCount = value; }
        }
        
        private IList<ApplicationGatewayRequestRoutingRule> _requestRoutingRules;
        
        /// <summary>
        /// Optional. Gets or sets request routing rules of application gateway
        /// resource
        /// </summary>
        public IList<ApplicationGatewayRequestRoutingRule> RequestRoutingRules
        {
            get { return this._requestRoutingRules; }
            set { this._requestRoutingRules = value; }
        }
        
        private string _size;
        
        /// <summary>
        /// Optional. Gets or sets size of application gateway resource
        /// </summary>
        public string Size
        {
            get { return this._size; }
            set { this._size = value; }
        }
        
        private IList<ApplicationGatewaySslCertificate> _sslCertificates;
        
        /// <summary>
        /// Optional. Gets or sets ssl certificates of application gateway
        /// resource
        /// </summary>
        public IList<ApplicationGatewaySslCertificate> SslCertificates
        {
            get { return this._sslCertificates; }
            set { this._sslCertificates = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the ApplicationGateway class.
        /// </summary>
        public ApplicationGateway()
        {
            this.BackendAddressPools = new LazyList<ApplicationGatewayBackendAddressPool>();
            this.BackendHttpSettingsList = new LazyList<ApplicationGatewayBackendHttpSettings>();
            this.FrontendIpConfigurations = new LazyList<ApplicationGatewayFrontendIpConfiguration>();
            this.FrontendPorts = new LazyList<ApplicationGatewayFrontendPort>();
            this.GatewayIpConfigurations = new LazyList<ApplicationGatewayIpConfiguration>();
            this.HttpListeners = new LazyList<ApplicationGatewayHttpListener>();
            this.RequestRoutingRules = new LazyList<ApplicationGatewayRequestRoutingRule>();
            this.SslCertificates = new LazyList<ApplicationGatewaySslCertificate>();
        }
        
        /// <summary>
        /// Initializes a new instance of the ApplicationGateway class with
        /// required arguments.
        /// </summary>
        public ApplicationGateway(string location)
            : this()
        {
            if (location == null)
            {
                throw new ArgumentNullException("location");
            }
            this.Location = location;
        }
    }
}
