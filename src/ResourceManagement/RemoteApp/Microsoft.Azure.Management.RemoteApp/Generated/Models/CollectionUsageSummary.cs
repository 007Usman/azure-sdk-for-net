// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RemoteApp.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Details of usage summary operation results.
    /// </summary>
    public partial class CollectionUsageSummary : Resource
    {
        /// <summary>
        /// Initializes a new instance of the CollectionUsageSummary class.
        /// </summary>
        public CollectionUsageSummary() { }

        /// <summary>
        /// Initializes a new instance of the CollectionUsageSummary class.
        /// </summary>
        public CollectionUsageSummary(string location, string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string etag = default(string), string userName = default(string), double? includedUsage = default(double?), double? overageUsage = default(double?), double? waivedUsage = default(double?), double? totalUsage = default(double?))
            : base(location, id, name, type, tags)
        {
            Etag = etag;
            UserName = userName;
            IncludedUsage = includedUsage;
            OverageUsage = overageUsage;
            WaivedUsage = waivedUsage;
            TotalUsage = totalUsage;
        }

        /// <summary>
        /// The etag of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

        /// <summary>
        /// The user's UPN.
        /// </summary>
        [JsonProperty(PropertyName = "properties.userName")]
        public string UserName { get; set; }

        /// <summary>
        /// The number of hours used which are included in the billing plan's
        /// base rate.
        /// </summary>
        [JsonProperty(PropertyName = "properties.includedUsage")]
        public double? IncludedUsage { get; set; }

        /// <summary>
        /// The number of hours used beyond the billing plan's included usage,
        /// but not exceeding the billing plan's maximum cost.
        /// </summary>
        [JsonProperty(PropertyName = "properties.overageUsage")]
        public double? OverageUsage { get; set; }

        /// <summary>
        /// The number of hours used beyond the billing plan's maximum cost.
        /// These usage hours are not billed.
        /// </summary>
        [JsonProperty(PropertyName = "properties.waivedUsage")]
        public double? WaivedUsage { get; set; }

        /// <summary>
        /// The total usage hours by the user.
        /// </summary>
        [JsonProperty(PropertyName = "properties.totalUsage")]
        public double? TotalUsage { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
