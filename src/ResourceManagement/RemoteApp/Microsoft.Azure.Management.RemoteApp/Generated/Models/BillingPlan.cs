// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RemoteApp.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Contains details of a billing plan.
    /// </summary>
    public partial class BillingPlan
    {
        /// <summary>
        /// Initializes a new instance of the BillingPlan class.
        /// </summary>
        public BillingPlan() { }

        /// <summary>
        /// Initializes a new instance of the BillingPlan class.
        /// </summary>
        public BillingPlan(string planId = default(string), string planName = default(string), string addOns = default(string), double? coresPerUser = default(double?), int? minimumBilledUserCount = default(int?), IList<BillingMeterInformation> billingMeters = default(IList<BillingMeterInformation>))
        {
            PlanId = planId;
            PlanName = planName;
            AddOns = addOns;
            CoresPerUser = coresPerUser;
            MinimumBilledUserCount = minimumBilledUserCount;
            BillingMeters = billingMeters;
        }

        /// <summary>
        /// Unique identifier of billing plan.
        /// </summary>
        [JsonProperty(PropertyName = "planId")]
        public string PlanId { get; set; }

        /// <summary>
        /// Short name of billing plan.
        /// </summary>
        [JsonProperty(PropertyName = "planName")]
        public string PlanName { get; set; }

        /// <summary>
        /// Associated add-ons.
        /// </summary>
        [JsonProperty(PropertyName = "addOns")]
        public string AddOns { get; set; }

        /// <summary>
        /// Computing cores per user.
        /// </summary>
        [JsonProperty(PropertyName = "coresPerUser")]
        public double? CoresPerUser { get; set; }

        /// <summary>
        /// Minimum number of user to bill.
        /// </summary>
        [JsonProperty(PropertyName = "minimumBilledUserCount")]
        public int? MinimumBilledUserCount { get; set; }

        /// <summary>
        /// List of meters for this billing plan
        /// </summary>
        [JsonProperty(PropertyName = "billingMeters")]
        public IList<BillingMeterInformation> BillingMeters { get; set; }

    }
}
