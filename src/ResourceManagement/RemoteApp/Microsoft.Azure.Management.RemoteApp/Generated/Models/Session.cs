// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RemoteApp.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// The wrapper for the session object
    /// </summary>
    public partial class Session : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Session class.
        /// </summary>
        public Session() { }

        /// <summary>
        /// Initializes a new instance of the Session class.
        /// </summary>
        public Session(string location, string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string etag = default(string), DateTime? logonTimeUtc = default(DateTime?), string userUpn = default(string), SessionState? state = default(SessionState?))
            : base(location, id, name, type, tags)
        {
            Etag = etag;
            LogonTimeUtc = logonTimeUtc;
            UserUpn = userUpn;
            State = state;
        }

        /// <summary>
        /// The etag of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

        /// <summary>
        /// The UTC time the session started
        /// </summary>
        [JsonProperty(PropertyName = "properties.logonTimeUtc")]
        public DateTime? LogonTimeUtc { get; set; }

        /// <summary>
        /// The Upn of the currently active user
        /// </summary>
        [JsonProperty(PropertyName = "properties.userUpn")]
        public string UserUpn { get; set; }

        /// <summary>
        /// The session state. Possible values are 'Active', 'Disconnected',
        /// 'NoSession', 'Unknown'. Possible values for this property
        /// include: 'Active', 'Connected', 'Disconnected', 'NoSession',
        /// 'Unknown'.
        /// </summary>
        [JsonProperty(PropertyName = "properties.state")]
        public SessionState? State { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
