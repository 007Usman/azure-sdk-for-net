// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RemoteApp.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// The response for the get virtual machine operation.
    /// </summary>
    public partial class VmDetails : Resource
    {
        /// <summary>
        /// Initializes a new instance of the VmDetails class.
        /// </summary>
        public VmDetails() { }

        /// <summary>
        /// Initializes a new instance of the VmDetails class.
        /// </summary>
        public VmDetails(string location, string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string etag = default(string), string nextLink = default(string), string virtualMachineName = default(string), IList<string> loggedOnUserUpn = default(IList<string>))
            : base(location, id, name, type, tags)
        {
            Etag = etag;
            NextLink = nextLink;
            VirtualMachineName = virtualMachineName;
            LoggedOnUserUpn = loggedOnUserUpn;
        }

        /// <summary>
        /// The etag of the resource.
        /// </summary>
        [JsonProperty(PropertyName = "etag")]
        public string Etag { get; set; }

        /// <summary>
        /// The URL for requesting next page of resources.
        /// </summary>
        [JsonProperty(PropertyName = "nextLink")]
        public string NextLink { get; set; }

        /// <summary>
        /// The virtual machine name.
        /// </summary>
        [JsonProperty(PropertyName = "properties.virtualMachineName")]
        public string VirtualMachineName { get; set; }

        /// <summary>
        /// List of the users logged onto this virtual machine.
        /// </summary>
        [JsonProperty(PropertyName = "properties.loggedOnUserUpn")]
        public IList<string> LoggedOnUserUpn { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
