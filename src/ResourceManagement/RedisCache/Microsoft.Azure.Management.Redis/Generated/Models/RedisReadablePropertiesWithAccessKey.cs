// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Redis.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Properties generated only in response to CreateOrUpdate redis
    /// operation.
    /// </summary>
    public partial class RedisReadablePropertiesWithAccessKey : RedisReadableProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// RedisReadablePropertiesWithAccessKey class.
        /// </summary>
        public RedisReadablePropertiesWithAccessKey() { }

        /// <summary>
        /// Initializes a new instance of the
        /// RedisReadablePropertiesWithAccessKey class.
        /// </summary>
        public RedisReadablePropertiesWithAccessKey(Sku sku, string redisVersion = default(string), IDictionary<string, string> redisConfiguration = default(IDictionary<string, string>), bool? enableNonSslPort = default(bool?), IDictionary<string, string> tenantSettings = default(IDictionary<string, string>), int? shardCount = default(int?), string virtualNetwork = default(string), string subnet = default(string), string staticIP = default(string), string provisioningState = default(string), string hostName = default(string), int? port = default(int?), int? sslPort = default(int?), RedisAccessKeys accessKeys = default(RedisAccessKeys))
            : base(sku, redisVersion, redisConfiguration, enableNonSslPort, tenantSettings, shardCount, virtualNetwork, subnet, staticIP, provisioningState, hostName, port, sslPort)
        {
            AccessKeys = accessKeys;
        }

        /// <summary>
        /// Redis cache access keys.
        /// </summary>
        [JsonProperty(PropertyName = "accessKeys")]
        public RedisAccessKeys AccessKeys { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
