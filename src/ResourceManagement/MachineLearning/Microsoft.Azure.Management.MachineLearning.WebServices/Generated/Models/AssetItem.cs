// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.15.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.MachineLearning.WebServices.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// [TODO] Asset Name
    /// </summary>
    public partial class AssetItem
    {
        /// <summary>
        /// Initializes a new instance of the AssetItem class.
        /// </summary>
        public AssetItem() { }

        /// <summary>
        /// Initializes a new instance of the AssetItem class.
        /// </summary>
        public AssetItem(string name = default(string), string type = default(string), AssetLocation location = default(AssetLocation), IDictionary<string, AssetPort> inputPorts = default(IDictionary<string, AssetPort>), IDictionary<string, AssetPort> outputPorts = default(IDictionary<string, AssetPort>), IDictionary<string, string> metadata = default(IDictionary<string, string>))
        {
            Name = name;
            Type = type;
            Location = location;
            InputPorts = inputPorts;
            OutputPorts = outputPorts;
            Metadata = metadata;
        }

        /// <summary>
        /// Module friendly name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Module type
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public AssetLocation Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inputPorts")]
        public IDictionary<string, AssetPort> InputPorts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "outputPorts")]
        public IDictionary<string, AssetPort> OutputPorts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "metadata")]
        public IDictionary<string, string> Metadata { get; set; }

    }
}
