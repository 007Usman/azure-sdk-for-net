// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
// Changes may cause incorrect behavior and will be lost if the code is

namespace Microsoft.Azure.Management.Logic.Models
{
    using System;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// </summary>
    public partial class WorkflowTrigger : SubResource
    {
        /// <summary>
        /// Gets the workflow trigger name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the workflow trigger type.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets the created time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdTime")]
        public DateTime? CreatedTime { get; private set; }

        /// <summary>
        /// Gets the changed time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.changedTime")]
        public DateTime? ChangedTime { get; private set; }

        /// <summary>
        /// Gets the state. Possible values for this property include:
        /// 'NotSpecified', 'Enabled', 'Disabled', 'Deleted', 'Suspended'
        /// </summary>
        [JsonProperty(PropertyName = "properties.state")]
        public WorkflowState? State { get; private set; }

        /// <summary>
        /// Gets the status. Possible values for this property include:
        /// 'NotSpecified', 'Paused', 'Running', 'Waiting', 'Succeeded',
        /// 'Skipped', 'Suspended', 'Cancelled', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public WorkflowStatus? Status { get; private set; }

        /// <summary>
        /// Gets the last execution time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastExecutionTime")]
        public DateTime? LastExecutionTime { get; private set; }

        /// <summary>
        /// Gets the next execution time.
        /// </summary>
        [JsonProperty(PropertyName = "properties.nextExecutionTime")]
        public DateTime? NextExecutionTime { get; private set; }

        /// <summary>
        /// Gets the workflow trigger recurrence.
        /// </summary>
        [JsonProperty(PropertyName = "properties.recurrence")]
        public WorkflowTriggerRecurrence Recurrence { get; private set; }

        /// <summary>
        /// Gets the reference to workflow.
        /// </summary>
        [JsonProperty(PropertyName = "properties.workflow")]
        public ResourceReference Workflow { get; private set; }

    }
}
