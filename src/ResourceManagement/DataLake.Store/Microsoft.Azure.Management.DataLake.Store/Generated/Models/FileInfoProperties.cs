// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.DataLake.Store.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Data Lake file information properties
    /// </summary>
    public partial class FileInfoProperties
    {
        /// <summary>
        /// Initializes a new instance of the FileInfoProperties class.
        /// </summary>
        public FileInfoProperties() { }

        /// <summary>
        /// Initializes a new instance of the FileInfoProperties class.
        /// </summary>
        {
            Id = id;
            Name = name;
            Length = length;
            ModificationTime = modificationTime;
            CreationTime = creationTime;
            ExpirationTime = expirationTime;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]

        /// <summary>
        /// Gets or sets the file name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the number of bytes in a file.
        /// </summary>
        [JsonProperty(PropertyName = "length")]
        public long? Length { get; set; }

        /// <summary>
        /// Gets or sets the modification time as ticks since the epoch.
        /// </summary>
        [JsonProperty(PropertyName = "modificationTime")]
        public long? ModificationTime { get; set; }

        /// <summary>
        /// Gets or sets the creation time as ticks since the epoch.
        /// </summary>
        [JsonProperty(PropertyName = "creationTime")]
        public long? CreationTime { get; set; }

        /// <summary>
        /// Gets or sets the expiration time, if any, as ticks since the
        /// epoch. If this is set to 0 or DateTime.MaxValue there is no
        /// expiration.
        /// </summary>
        [JsonProperty(PropertyName = "expirationTime")]
        public long? ExpirationTime { get; set; }

    }
}
