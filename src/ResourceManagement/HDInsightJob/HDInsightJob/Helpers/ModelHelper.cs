// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;

namespace Microsoft.Azure.Management.HDInsight.Job.Models
{
    internal static class ModelHelper
    {
        internal static string GetStatusDirectory(string status)
        {
            var statusDir = status;
            if (string.IsNullOrWhiteSpace(statusDir))
            {
                // Format of status directory: 2009-06-15T13-45-30-<guid>
                statusDir = DateTime.UtcNow.ToString("s", System.Globalization.CultureInfo.InvariantCulture);

                // Can't create a directory with char ":" in azure storage
                statusDir = statusDir.Replace(':', '-');
                statusDir = string.Format("{0}-{1}", statusDir, Guid.NewGuid().ToString());
            }

            return string.Format("&statusdir={0}", statusDir);
        }

        internal static string ConvertDictionaryToString(IDictionary<string, string> defines, string param)
        {
            return defines == null || defines.Count == 0 ? string.Empty : param + string.Join(param, defines.Select(x => x.Key + "%3D" + x.Value).ToArray());
        }

        internal static string ConvertListToString(IList<string> list, string prefix, string join)
        {
            return list == null || list.Count == 0 ? string.Empty : prefix + string.Join(join, list.ToArray());
        }
    }
}
