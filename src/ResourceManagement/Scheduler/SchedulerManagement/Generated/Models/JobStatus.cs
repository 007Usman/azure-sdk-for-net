// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// Code generated by Microsoft (R) AutoRest Code Generator {0}
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
namespace Microsoft.Azure.Management.Scheduler.Models
{
    using System;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Azure;

    /// <summary>
    /// </summary>
    public partial class JobStatus
    {
        /// <summary>
        /// Gets the number of times this job has executed.
        /// </summary>
        [JsonProperty(PropertyName = "executionCount")]
        public int? ExecutionCount { get; private set; }

        /// <summary>
        /// Gets the number of times this job has failed.
        /// </summary>
        [JsonProperty(PropertyName = "failureCount")]
        public int? FailureCount { get; private set; }

        /// <summary>
        /// Gets the number of faulted occurrences (occurrences that were
        /// retried and failed as many times as the retry policy states).
        /// </summary>
        [JsonProperty(PropertyName = "faultedCount")]
        public int? FaultedCount { get; private set; }

        /// <summary>
        /// Gets the time the last occurrence executed in ISO-8601 format.
        /// Could be empty if job has not run yet.
        /// </summary>
        [JsonProperty(PropertyName = "lastExecutionTime")]
        public DateTime? LastExecutionTime { get; private set; }

        /// <summary>
        /// Gets the time of the next occurrence in ISO-8601 format. Could be
        /// empty if the job is completed.
        /// </summary>
        [JsonProperty(PropertyName = "nextExecutionTime")]
        public DateTime? NextExecutionTime { get; private set; }

    }
}
