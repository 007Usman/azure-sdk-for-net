// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Batch.Protocol.Models
{
    using System.Linq;

    /// <summary>
    /// Parameters for a CloudPoolOperations.Resize request.
    /// </summary>
    public partial class PoolResizeParameter
    {
        /// <summary>
        /// Initializes a new instance of the PoolResizeParameter class.
        /// </summary>
        public PoolResizeParameter() { }

        /// <summary>
        /// Initializes a new instance of the PoolResizeParameter class.
        /// </summary>
        /// <param name="targetDedicated">The desired number of compute nodes
        /// in the pool.</param>
        /// <param name="resizeTimeout">The timeout for allocation of compute
        /// nodes to the pool or removal of compute nodes from the
        /// pool.</param>
        /// <param name="nodeDeallocationOption">When nodes may be removed
        /// from the pool, if the pool size is decreasing.</param>
        public PoolResizeParameter(int targetDedicated, System.TimeSpan? resizeTimeout = default(System.TimeSpan?), ComputeNodeDeallocationOption? nodeDeallocationOption = default(ComputeNodeDeallocationOption?))
        {
            TargetDedicated = targetDedicated;
            ResizeTimeout = resizeTimeout;
            NodeDeallocationOption = nodeDeallocationOption;
        }

        /// <summary>
        /// Gets or sets the desired number of compute nodes in the pool.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetDedicated")]
        public int TargetDedicated { get; set; }

        /// <summary>
        /// Gets or sets the timeout for allocation of compute nodes to the
        /// pool or removal of compute nodes from the pool.
        /// </summary>
        /// <remarks>
        /// The default value is 10 minutes.
        /// </remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resizeTimeout")]
        public System.TimeSpan? ResizeTimeout { get; set; }

        /// <summary>
        /// Gets or sets when nodes may be removed from the pool, if the pool
        /// size is decreasing.
        /// </summary>
        /// <remarks>
        /// Possible values include: 'requeue', 'terminate', 'taskcompletion',
        /// 'retaineddata'
        /// </remarks>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nodeDeallocationOption")]
        public ComputeNodeDeallocationOption? NodeDeallocationOption { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
