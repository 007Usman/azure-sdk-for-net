//****************************************
// This file was autogenerated by a tool.
// Do not modify it.
//****************************************
namespace Microsoft.Azure.Batch
{
    using Models = Microsoft.Azure.Batch.Protocol.Models;
    using System;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A node agent Sku supported by Batch service.
    /// </summary>
    public partial class NodeAgentSku : IPropertyMetadata
    {
        private readonly string id;
        private readonly Common.OSType? osType;
        private readonly IReadOnlyList<ImageReference> verifiedImageReferences;

        #region Constructors

        internal NodeAgentSku(Models.NodeAgentSku protocolObject)
        {
            this.id = protocolObject.Id;
            this.osType = UtilitiesInternal.MapNullableEnum<Common.OSType>(protocolObject.OsType);
            this.verifiedImageReferences = ImageReference.ConvertFromProtocolCollectionReadOnly(protocolObject.VerifiedImageReferences);
        }

        #endregion Constructors

        #region NodeAgentSku

        /// <summary>
        /// Gets the id of the node agent sku.
        /// </summary>
        public string Id
        {
            get { return this.id; }
        }

        /// <summary>
        /// Gets the type of OS that the node agent sku is targeted against.
        /// </summary>
        public Common.OSType? OSType
        {
            get { return this.osType; }
        }

        /// <summary>
        /// Gets the list of images which the node agent SKU has been verified to run against. This collection is not exhaustive 
        /// (the node agent may work against other images as well).
        /// </summary>
        public IReadOnlyList<ImageReference> VerifiedImageReferences
        {
            get { return this.verifiedImageReferences; }
        }

        #endregion // NodeAgentSku

        #region IPropertyMetadata

        bool IModifiable.HasBeenModified
        {
            //This class is compile time readonly so it cannot have been modified
            get { return false; }
        }

        bool IReadOnly.IsReadOnly
        {
            get { return true; }
            set
            {
                // This class is compile time readonly already
            }
        }

        #endregion // IPropertyMetadata
    }
}