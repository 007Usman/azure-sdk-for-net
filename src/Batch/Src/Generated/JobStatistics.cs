//****************************************
// This file was autogenerated by a tool.
// Do not modify it.
//****************************************
namespace Microsoft.Azure.Batch
{
    using Models = Microsoft.Azure.Batch.Protocol.Models;
    using System;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Resource usage statistics for the job.
    /// </summary>
    public partial class JobStatistics : IPropertyMetadata
    {
        private readonly long failedTaskCount;
        private readonly TimeSpan kernelCpuTime;
        private readonly DateTime lastUpdateTime;
        private readonly double readIOGiB;
        private readonly long readIOps;
        private readonly DateTime startTime;
        private readonly long succeededTaskCount;
        private readonly long taskRetryCount;
        private readonly string url;
        private readonly TimeSpan userCpuTime;
        private readonly TimeSpan waitTime;
        private readonly TimeSpan wallClockTime;
        private readonly double writeIOGiB;
        private readonly long writeIOps;

        #region Constructors

        internal JobStatistics(Models.JobStatistics protocolObject)
        {
            this.failedTaskCount = protocolObject.NumFailedTasks;
            this.kernelCpuTime = protocolObject.KernelCPUTime;
            this.lastUpdateTime = protocolObject.LastUpdateTime;
            this.readIOGiB = protocolObject.ReadIOGiB;
            this.readIOps = protocolObject.ReadIOps;
            this.startTime = protocolObject.StartTime;
            this.succeededTaskCount = protocolObject.NumSucceededTasks;
            this.taskRetryCount = protocolObject.NumTaskRetries;
            this.url = protocolObject.Url;
            this.userCpuTime = protocolObject.UserCPUTime;
            this.waitTime = protocolObject.WaitTime;
            this.wallClockTime = protocolObject.WallClockTime;
            this.writeIOGiB = protocolObject.WriteIOGiB;
            this.writeIOps = protocolObject.WriteIOps;
        }

        #endregion Constructors

        #region JobStatistics

        /// <summary>
        /// Gets the total number of tasks failures in the job that failed during the given time range.
        /// </summary>
        public long FailedTaskCount
        {
            get { return this.failedTaskCount; }
        }

        /// <summary>
        /// Gets the total kernel mode CPU time (per core) consumed by all the tasks in the job.
        /// </summary>
        public TimeSpan KernelCpuTime
        {
            get { return this.kernelCpuTime; }
        }

        /// <summary>
        /// Gets the end time of the time range for the statistics.
        /// </summary>
        public DateTime LastUpdateTime
        {
            get { return this.lastUpdateTime; }
        }

        /// <summary>
        /// Gets the total gibibytes of I/O (network + disk) disk read made by all the tasks in the job.
        /// </summary>
        public double ReadIOGiB
        {
            get { return this.readIOGiB; }
        }

        /// <summary>
        /// Gets the total number of disk I/O (network + disk) read operations made by all the tasks in the job.
        /// </summary>
        public long ReadIOps
        {
            get { return this.readIOps; }
        }

        /// <summary>
        /// Gets the start time of the time range for the statistics.
        /// </summary>
        public DateTime StartTime
        {
            get { return this.startTime; }
        }

        /// <summary>
        /// Gets the total number of tasks successfully completed in the job during the given time range.
        /// </summary>
        public long SucceededTaskCount
        {
            get { return this.succeededTaskCount; }
        }

        /// <summary>
        /// Gets the total number of retries occurred on all the tasks in the job during the given time range.
        /// </summary>
        public long TaskRetryCount
        {
            get { return this.taskRetryCount; }
        }

        /// <summary>
        /// Gets the URL of the job stats.
        /// </summary>
        public string Url
        {
            get { return this.url; }
        }

        /// <summary>
        /// Gets the total user mode CPU time (per core) consumed by all the tasks in the job.
        /// </summary>
        public TimeSpan UserCpuTime
        {
            get { return this.userCpuTime; }
        }

        /// <summary>
        /// Gets the total wait time across all the tasks in the job.
        /// </summary>
        public TimeSpan WaitTime
        {
            get { return this.waitTime; }
        }

        /// <summary>
        /// Gets the total elapsed time.
        /// </summary>
        public TimeSpan WallClockTime
        {
            get { return this.wallClockTime; }
        }

        /// <summary>
        /// Gets the total gibibytes of I/O (network + disk) disk written made by all the tasks in the job.
        /// </summary>
        public double WriteIOGiB
        {
            get { return this.writeIOGiB; }
        }

        /// <summary>
        /// Gets the total number of disk I/O (network + disk) write operations made by all the tasks in the job.
        /// </summary>
        public long WriteIOps
        {
            get { return this.writeIOps; }
        }

        #endregion // JobStatistics

        #region IPropertyMetadata

        bool IModifiable.HasBeenModified
        {
            //This class is compile time readonly so it cannot have been modified
            get { return false; }
        }

        bool IReadOnly.IsReadOnly
        {
            get { return true; }
            set
            {
                // This class is compile time readonly already
            }
        }

        #endregion // IPropertyMetadata
    }
}