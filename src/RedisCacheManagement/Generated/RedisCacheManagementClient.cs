// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Net.Http;
using Microsoft.Azure.Management.RedisCache;
using Microsoft.WindowsAzure;
using Microsoft.WindowsAzure.Common;

namespace Microsoft.Azure.Management.RedisCache
{
    /// <summary>
    /// .Net client wrapper for the REST API for Azure Cache Management Service
    /// </summary>
    public partial class RedisCacheManagementClient : ServiceClient<RedisCacheManagementClient>, IRedisCacheManagementClient
    {
        private Uri _baseUri;
        
        /// <summary>
        /// Gets or sets the URI used as the base for all cloud service
        /// requests.
        /// </summary>
        public Uri BaseUri
        {
            get { return this._baseUri; }
        }
        
        private SubscriptionCloudCredentials _credentials;
        
        /// <summary>
        /// Gets or sets subscription credentials which uniquely identify
        /// Microsoft Azure subscription. The subscription ID forms part of
        /// the URI for every service call.
        /// </summary>
        public SubscriptionCloudCredentials Credentials
        {
            get { return this._credentials; }
        }
        
        private int _longRunningOperationInitialTimeout;
        
        /// <summary>
        /// Gets or sets the initial timeout for Long Running Operations.
        /// </summary>
        public int LongRunningOperationInitialTimeout
        {
            get { return this._longRunningOperationInitialTimeout; }
            set { this._longRunningOperationInitialTimeout = value; }
        }
        
        private int _longRunningOperationRetryTimeout;
        
        /// <summary>
        /// Gets or sets the retry timeout for Long Running Operations.
        /// </summary>
        public int LongRunningOperationRetryTimeout
        {
            get { return this._longRunningOperationRetryTimeout; }
            set { this._longRunningOperationRetryTimeout = value; }
        }
        
        private IRedisOperations _redis;
        
        /// <summary>
        /// Operations for managing the redis cache.
        /// </summary>
        public virtual IRedisOperations Redis
        {
            get { return this._redis; }
        }
        
        /// <summary>
        /// Initializes a new instance of the RedisCacheManagementClient class.
        /// </summary>
        private RedisCacheManagementClient()
            : base()
        {
            this._redis = new RedisOperations(this);
            this._longRunningOperationInitialTimeout = -1;
            this._longRunningOperationRetryTimeout = -1;
            this.HttpClient.Timeout = TimeSpan.FromSeconds(300);
        }
        
        /// <summary>
        /// Initializes a new instance of the RedisCacheManagementClient class.
        /// </summary>
        /// <param name='credentials'>
        /// Required. Gets or sets subscription credentials which uniquely
        /// identify Microsoft Azure subscription. The subscription ID forms
        /// part of the URI for every service call.
        /// </param>
        /// <param name='baseUri'>
        /// Required. Gets or sets the URI used as the base for all cloud
        /// service requests.
        /// </param>
        public RedisCacheManagementClient(SubscriptionCloudCredentials credentials, Uri baseUri)
            : this()
        {
            if (credentials == null)
            {
                throw new ArgumentNullException("credentials");
            }
            if (baseUri == null)
            {
                throw new ArgumentNullException("baseUri");
            }
            this._credentials = credentials;
            this._baseUri = baseUri;
            
            this.Credentials.InitializeServiceClient(this);
        }
        
        /// <summary>
        /// Initializes a new instance of the RedisCacheManagementClient class.
        /// </summary>
        /// <param name='credentials'>
        /// Required. Gets or sets subscription credentials which uniquely
        /// identify Microsoft Azure subscription. The subscription ID forms
        /// part of the URI for every service call.
        /// </param>
        public RedisCacheManagementClient(SubscriptionCloudCredentials credentials)
            : this()
        {
            if (credentials == null)
            {
                throw new ArgumentNullException("credentials");
            }
            this._credentials = credentials;
            this._baseUri = new Uri("https://management.azure.com");
            
            this.Credentials.InitializeServiceClient(this);
        }
        
        /// <summary>
        /// Initializes a new instance of the RedisCacheManagementClient class.
        /// </summary>
        /// <param name='httpClient'>
        /// The Http client
        /// </param>
        private RedisCacheManagementClient(HttpClient httpClient)
            : base(httpClient)
        {
            this._redis = new RedisOperations(this);
            this._longRunningOperationInitialTimeout = -1;
            this._longRunningOperationRetryTimeout = -1;
            this.HttpClient.Timeout = TimeSpan.FromSeconds(300);
        }
        
        /// <summary>
        /// Initializes a new instance of the RedisCacheManagementClient class.
        /// </summary>
        /// <param name='credentials'>
        /// Required. Gets or sets subscription credentials which uniquely
        /// identify Microsoft Azure subscription. The subscription ID forms
        /// part of the URI for every service call.
        /// </param>
        /// <param name='baseUri'>
        /// Required. Gets or sets the URI used as the base for all cloud
        /// service requests.
        /// </param>
        /// <param name='httpClient'>
        /// The Http client
        /// </param>
        public RedisCacheManagementClient(SubscriptionCloudCredentials credentials, Uri baseUri, HttpClient httpClient)
            : this(httpClient)
        {
            if (credentials == null)
            {
                throw new ArgumentNullException("credentials");
            }
            if (baseUri == null)
            {
                throw new ArgumentNullException("baseUri");
            }
            this._credentials = credentials;
            this._baseUri = baseUri;
            
            this.Credentials.InitializeServiceClient(this);
        }
        
        /// <summary>
        /// Initializes a new instance of the RedisCacheManagementClient class.
        /// </summary>
        /// <param name='credentials'>
        /// Required. Gets or sets subscription credentials which uniquely
        /// identify Microsoft Azure subscription. The subscription ID forms
        /// part of the URI for every service call.
        /// </param>
        /// <param name='httpClient'>
        /// The Http client
        /// </param>
        public RedisCacheManagementClient(SubscriptionCloudCredentials credentials, HttpClient httpClient)
            : this(httpClient)
        {
            if (credentials == null)
            {
                throw new ArgumentNullException("credentials");
            }
            this._credentials = credentials;
            this._baseUri = new Uri("https://management.azure.com");
            
            this.Credentials.InitializeServiceClient(this);
        }
    }
}
