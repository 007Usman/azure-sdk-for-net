// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.NotificationHubs.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Parameters supplied to the CreateOrUpdate Namespace operation.
    /// </summary>
    public partial class NamespaceCreateOrUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the NamespaceCreateOrUpdateParameters
        /// class.
        /// </summary>
        public NamespaceCreateOrUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NamespaceCreateOrUpdateParameters
        /// class.
        /// </summary>
        /// <param name="location">Gets or sets Namespace data center
        /// location.</param>
        /// <param name="properties">Gets or sets properties of the
        /// Namespace.</param>
        /// <param name="tags">Gets or sets Namespace tags.</param>
        public NamespaceCreateOrUpdateParameters(string location, NamespaceProperties properties, IDictionary<string, string> tags = default(IDictionary<string, string>))
        {
            Location = location;
            Tags = tags;
            Properties = properties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets Namespace data center location.
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// Gets or sets Namespace tags.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets properties of the Namespace.
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public NamespaceProperties Properties { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Location == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Location");
            }
            if (Properties == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Properties");
            }
        }
    }
}
